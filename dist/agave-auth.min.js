(function(){"use strict";var a=this,b="undefined"!=typeof require,c=a.btoa;if("undefined"==typeof c){if(!b)throw new Error("agave-auth.js requires the btoa function");c=require("btoa")}var d=a.Promise;if("undefined"==typeof d){if(!b)throw new Error("Agave.js requires Promise");d=require("es6-promise").Promise}var e=a.SwaggerClient;if("undefined"==typeof e){if(!b)throw new Error("Agave.js requires SwaggerClient");e=require("swagger-client")}var f=a.Agave;if("undefined"==typeof f){if(!b)throw new Error("agave-auth.js requires agave.js");f=require("agave")}f.prototype.setClient=function(a){return this.client=a,d.resolve(this)},f.prototype.generateClient=function(a){function b(){f?c.api.clientAuthorizations.add("Authorization",f):c.api.clientAuthorizations.remove("Authorization")}if(!(a.username&&a.password&&a.clientName))return d.reject('To generate a client provide "username" and "password" for Agave Tenant, as well as a "clientName".');var c=this,f=c.api.clientAuthorizations.authz.Authorization;return new d(function(d,f){c.api.clientAuthorizations.add("Authorization",new e.PasswordAuthorization("Authorization",a.username,a.password,"header")),c.api.clients.create({body:{clientName:a.clientName}},function(a){b(),c.setClient(a.obj.result),d(a.obj)},function(a){b(),f(a.obj)})})},f.prototype.setToken=function(a){return a.token?(this.token=a.token,this.token.accessToken=this.token.access_token,this.token.refreshToken=this.token.refresh_token,this.token.expiresIn=this.token.expires_in,this.token.tokenType=this.token.token_type,this.api.clientAuthorizations.add("Authorization",new e.ApiKeyAuthorization("Authorization","Bearer "+this.token.accessToken,"header"))):this.token=null,d.resolve(this)},f.prototype.newToken=function(a){if(!(this.client&&a.username&&a.password))return d.reject('To obtain a token you must have an API client and provide your "username" and "password" for the Agave Tenant.');var b=[["username",encodeURIComponent(a.username)],["password",encodeURIComponent(a.password)],["grant_type","password"],["scope","PRODUCTION"]].map(function(a){return a.join("=")}).join("&");return this.tokenRequest(b)},f.prototype.refreshToken=function(){if(!(this.client&&this.token&&this.refreshToken))return d.reject("To obtain a token you must have an API client and a Token with refresh_token set.");var a=[["refresh_token",encodeURIComponent(this.token.refreshToken)],["grant_type","refresh_token"],["scope","PRODUCTION"]].map(function(a){return a.join("=")}).join("&");return this.tokenRequest(a)},f.prototype.tokenRequest=function(a){var b=this.api.scheme+"://"+this.api.host+"/token",e="Basic "+c(this.client.consumerKey+":"+this.client.consumerSecret);return new d(function(c,d){var f,g;f=function(){4===this.readyState&&(200===this.status?c(JSON.parse(this.response)):d(this.response))},g=new XMLHttpRequest,g.onreadystatechange=f,g.open("post",b,!0),g.setRequestHeader("Authorization",e),g.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),g.send(a)})}}).call(this);